version: '3.4'

networks:
  fitness-microservice-network:
    name: fitness_network  

services:
  mssql:
    build:
      context: .
      dockerfile: sql.Dockerfile
    container_name: fitnessmicroservices.mssql
    restart: unless-stopped
    env_file:
      - .env
    environment: 
      ACCEPT_EULA: "Y"
      SA_PASSWORD: ${MSSQL_FITNESS_SERVICES_PASSWORD}
    user: root
    ports: 
      - "1440:1433"
    #volumes: 
    #  - "fitness-sqldata:/var/opt/mssql"
    networks:
        - fitness-microservice-network

  mongo:
    image: mongo
    container_name: mongo-database
    restart: unless-stopped 
    ports:
      - 27018:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
    networks:
        - fitness-microservice-network
    #volumes:
    #  - mongodb-data

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: unless-stopped 
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongo-database
    networks:
        - fitness-microservice-network
    depends_on:
      - mongo

#
  db-postgres:
    container_name: postgres_container
    image: postgres
    restart: unless-stopped
    env_file:
      - .env
    environment: 
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_FITNESS_SERVICES_PASSWORD} 
    ports:
      - "5431:5432"
    networks:
        - fitness-microservice-network
  #volumes:
  #  - fitness-postgresql-data:/var/lib/postgresql/data

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: secret 
    ports:
      - "8079:80"
    networks:
        - fitness-microservice-network
    depends_on:
      - db-postgres
    #volumes:
    #  - fitness-pgadmin-data:/var/lib/pgadmin

  cacheredis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped 
    networks:
        - fitness-microservice-network
    ports:
      - "6378:6379"
    #volumes:
    #    - redis-data:/data


  seq:
    image: datalust/seq
    restart: unless-stopped 
    ports:
        - 5341:80
    environment:
         - ACCEPT_EULA=Y
    networks:
        - fitness-microservice-network


  messages:
    image: rabbitmq:3-management-alpine
    hostname: "rabbitmq"
    container_name: rabbitmq
    restart: unless-stopped
    environment:
     - RABBITMQ_DEFAULT_USER=user
     - RABBITMQ_DEFAULT_PASS=${RABBITMQ_FITNESS_SERVICES_PASSWORD}
    ports:
     - "5672:5672"
     - "15672:15672"
    #volumes:
    #    - rabbitmq:/var/lib/rabbitmq/mnesia
    networks:
        - fitness-microservice-network




#volumes:
#  fitness-sqldata:
#  mongodb-data:
#  redis-data:
#  fitness-postgresql-data:
#  fitness-pgadmin-data:
#  rabbitmq:
